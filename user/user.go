// Package user provides functions related to obtaining information from the authenticated user
package user

import (
	"encoding/json"
	"github.com/aws/aws-lambda-go/events"
	"github.com/go-ozzo/ozzo-validation"
	"github.com/go-ozzo/ozzo-validation/is"
	v "github.com/go-ozzo/ozzo-validation/v4"
)

// CognitoUser represents the attributes stored for a user in Cognito.
type CognitoUser struct {
	Email       string `json:"email"`
	Sub         string `json:"sub"`
	PhoneNumber string `json:"phone_number"`
}

// GetCognitoUser given Android/IOs lambda request, takes the event generated by the SDK,
// and returns the Cognito attributes of a user.
func GetCognitoUser(e events.APIGatewayProxyRequestContext) (user CognitoUser, err error) {
	if err := v.ValidateStruct(&e,
		v.Field(&e.Authorizer, v.Required),
	); err != nil {
		return user, err
	}

	if err := v.Validate(e.Authorizer,
		v.Map(v.Key("claims", v.Required)),
	); err != nil {
		return user, err
	}
	claims := e.Authorizer["claims"].(map[string]interface{})

	jsonString, err := json.Marshal(claims)

	if err != nil {
		return user, err
	}

	if err := json.Unmarshal(jsonString, &user); err != nil {
		return user, err
	}

	if err = validation.ValidateStruct(&user,
		validation.Field(&user.Sub, validation.Required, is.UUIDv4),
		validation.Field(&user.Email, is.Email),
		validation.Field(&user.PhoneNumber, is.E164),
	); err != nil {
		return user, err
	}
	return user, nil
}
